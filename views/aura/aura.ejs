<%- layout('layouts/boilerplate') %>

<style>
    /* Root CSS Variables for the Retro Theme (ensure these are in your main style.css) */
    :root {
        --retro-bg: wheat; /* Main background from your box */
        --retro-text: #1F2937; /* Dark text for contrast */
        --retro-accent-red: #d1451e; /* From box shadow */
        --retro-accent-yellow: #FFD93D; /* From previous accent */
        --retro-primary-teal: #2F9C95; /* From your card background */
        --retro-secondary-light: #fff; /* From box shadow white */
        --retro-shadow-dark: #000; /* From box shadow black */
        --retro-shadow-light: rgba(0, 0, 0, 0.2); /* For softer elements */
        --transition-fast: 0.2s ease-in-out; /* Define if not already */
        --font-heading-retro: 'Press Start 2P', cursive; /* Ensure this is defined */
        --font-primary: 'Inter', sans-serif; /* Assuming Inter for body text */
    }

    /* --- General Layout --- */
    .profile-page-container {
        display: flex;
        justify-content: center; /* Center the entire content */
        align-items: flex-start; /* Align items to the top if they have different heights */
        padding: 1.5rem; /* Slightly reduced padding */
        background-color: var(--retro-bg);
        font-family: var(--font-primary); /* Default to Inter for general text */
        color: var(--retro-text);
        min-height: 100vh;
        flex-wrap: wrap; /* Allow wrapping for responsiveness */
        gap: 1.5rem; /* Reduced gap between main sections (profile card and reviews) */
    }

    /* --- Retro Profile Card --- */
    .retro-profile-card {
        width: 360px; /* Slightly more compact width */
        background: var(--retro-primary-teal);
        border-radius: 15px;
        padding: 1.2rem; /* Reduced padding for compactness */
        box-shadow: 0px 0px 0 var(--retro-shadow-dark);
        border: 2px solid var(--retro-shadow-dark);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        align-items: center; /* Center content horizontally */
        box-shadow:
            0 0 0 0.15em var(--retro-shadow-dark),
            0 0 0 0.3em var(--retro-secondary-light),
            0 0 0 0.45em var(--retro-shadow-dark),
            0 0.5em 0 0 var(--retro-accent-red),
            0 0.5em 0 0.15em var(--retro-shadow-dark); /* Applied from your .box */
        text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3);
        animation: bounceIn 0.8s ease-out; /* Add entry animation */
    }

    .retro-profile-card:hover {
        transform: translateY(-5px) rotate(0deg) scale(1.01); /* Lift effect and slight scale */
        box-shadow:
            0 0 0 0.15em var(--retro-shadow-dark),
            0 0 0 0.3em var(--retro-secondary-light),
            0 0 0 0.45em var(--retro-shadow-dark),
            0 0.8em 0 0 var(--retro-accent-red), /* More pronounced lift */
            0 0.8em 0 0.15em var(--retro-shadow-dark);
    }

    /* Animation for card entry */
    @keyframes bounceIn {
        0% { opacity: 0; transform: translateY(50px) scale(0.8); }
        60% { opacity: 1; transform: translateY(-10px) scale(1.05); }
        100% { transform: translateY(0) scale(1); }
    }


    /* Profile Image and Online Indicator */
    .profile-image-container {
        position: relative;
        width: 100px; /* Slightly smaller for compactness */
        height: 100px;
        border-radius: 50%;
        overflow: hidden;
        border: 3px solid var(--retro-accent-yellow);
        box-shadow: 0 4px 10px var(--retro-shadow-light);
        margin-bottom: 0.8rem; /* Reduced margin */
        background-color: var(--retro-secondary-light); /* Background if image isn't perfect circle */
        transition: transform 0.3s ease;
    }

    .profile-image-container img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
        image-rendering: pixelated; /* Ensure pixelated look for images */
    }

    .profile-image-container:hover {
        transform: scale(1.05) rotate(2deg); /* Added slight rotation */
    }

    /* Profile Text */
    .profile-info {
        text-align: center;
        margin-bottom: 1rem; /* Reduced margin */
    }

    .profile-info h3 { 
        font-size: 1.3rem; /* More compact */
        font-weight: 700;
        color: var(--retro-text);
        margin-bottom: 0.1rem; /* Reduced margin */
        text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.4);
        font-family: var(--font-heading-retro); /* Press Start 2P */
    }

    .profile-info p { /* For email and username */
        font-size: 0.9rem; /* More compact */
        color: var(--retro-text);
        margin-bottom: 0.3rem; /* Reduced margin */
        font-family: var(--font-primary); /* Inter */
        text-shadow: none;
        word-break: break-all; /* Important for long emails/usernames */
    }

    /* Stats Section */
    .profile-stats {
        display: flex;
        justify-content: space-around;
        width: 100%;
        margin-top: 0.8rem; /* Reduced margin */
        padding-top: 0.8rem; /* Reduced padding */
        border-top: 0.15em dashed rgba(0, 0, 0, 0.15);
        color: var(--retro-text);
        font-family: var(--font-primary); /* Inter */
        text-shadow: none;
    }

    .stat-item {
        text-align: center;
        flex: 1;
        padding: 0 0.4rem; /* Reduced padding */
    }

    .stat-item strong {
        display: block;
        font-size: 1.1em; /* Slightly smaller numbers */
        color: var(--retro-accent-yellow); /* Yellow for numbers */
        font-family: var(--font-heading-retro); /* Press Start 2P for numbers */
        text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3);
    }

    .stat-item span {
        font-size: 0.75rem; /* Slightly smaller text */
        display: block;
        margin-top: 0.1rem; /* Reduced margin */
        line-height: 1.2;
    }
    
    .overall-rating-stars {
        color: var(--retro-accent-yellow);
        font-size: 1.1em; /* Slightly smaller stars */
        letter-spacing: 1px; /* Reduced letter spacing */
        text-shadow: none;
    }

    /* Action Buttons */
    .profile-action-buttons {
        display: flex;
        flex-direction: row; /* Already horizontal */
        gap: 0.6em; /* Reduced gap between buttons */
        margin-top: 0.8em; /* Reduced margin */
        padding-top: 0.8em; /* Reduced padding */
        border-top: 0.15em dashed rgba(0, 0, 0, 0.15);
        width: 100%;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap; /* Allow buttons to wrap for responsiveness */
    }

    .btn-retro-profile {
        position: relative;
        background: var(--retro-accent-red);
        color: var(--retro-secondary-light);
        font-family: var(--font-heading-retro);
        font-size: 0.9em; /* Slightly smaller font for buttons */
        font-weight: 700;
        padding: 0.6em 1em; /* Reduced padding */
        border: 3px solid var(--retro-shadow-dark);
        border-radius: 12px;
        box-shadow: 0.4em 0.4em 0 var(--retro-shadow-dark);
        cursor: pointer;
        transition: all 0.2s ease;
        overflow: hidden;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.5);
        text-decoration: none;
        display: inline-block;
        box-sizing: border-box;
    }

    .btn-retro-profile:hover {
        background-color: var(--retro-accent-yellow);
        color: var(--retro-text);
        transform: translateY(-3px);
        box-shadow: 0.5em 0.5em 0 var(--retro-shadow-dark);
    }

    .btn-retro-profile:active {
        transform: translateY(0);
        box-shadow: 0.1em 0.1em 0 var(--retro-shadow-dark);
    }

    /* --- Review Section --- */
    .retro-review-section {
        width: 360px;
        background: var(--retro-primary-teal);
        border-radius: 15px;
        padding: 1.2rem;
        box-shadow:
            0 0 0 0.15em var(--retro-shadow-dark),
            0 0 0 0.3em var(--retro-secondary-light),
            0 0 0 0.45em var(--retro-shadow-dark),
            0 0.5em 0 0 var(--retro-accent-red),
            0 0.5em 0 0.15em var(--retro-shadow-dark);
        text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3);
        display: flex;
        flex-direction: column;
        animation: bounceIn 1s ease-out 0.2s backwards;
    }

    .retro-review-section h2 {
        font-family: var(--font-heading-retro);
        font-size: 1.1rem;
        color: var(--retro-text);
        margin-bottom: 0.8rem;
        padding-bottom: 0.4rem;
        border-bottom: 2px dashed var(--retro-accent-yellow);
        text-align: center;
        text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.4);
    }

    .retro-review-item {
        background: var(--retro-secondary-light);
        border: 2px solid var(--retro-shadow-dark);
        border-radius: 8px;
        padding: 0.7rem 0.9rem;
        margin-bottom: 0.8rem;
        box-shadow: 0.15em 0.15em 0 rgba(0, 0, 0, 0.2);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .retro-review-item:hover {
        transform: translateY(-2px) translateX(2px);
        box-shadow: 0.2em 0.2em 0 rgba(0, 0, 0, 0.3);
    }

    .retro-review-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 0.8rem;
        margin-bottom: 0.3rem;
        color: var(--retro-text);
        font-weight: 600;
        font-family: var(--font-primary);
        text-shadow: none;
    }

    .retro-review-stars {
        color: var(--retro-accent-yellow);
        letter-spacing: 0.5px;
        font-size: 1em;
        text-shadow: none;
    }

    .retro-review-text {
        font-size: 0.75rem;
        color: var(--retro-text);
        line-height: 1.4;
        margin-bottom: 0.3rem;
        font-family: var(--font-primary);
        text-shadow: none;
    }

    .retro-review-date {
        font-size: 0.65rem;
        color: var(--retro-text);
        text-align: right;
        font-family: var(--font-primary);
        text-shadow: none;
    }

    .no-reviews-message {
        color: var(--retro-text);
        text-align: center;
        padding: 0.8rem;
        font-style: italic;
        font-family: var(--font-primary);
        text-shadow: none;
    }

    /* --- Responsive Adjustments --- */
    @media (max-width: 850px) {
        .profile-page-container {
            flex-direction: column;
            align-items: center;
            padding: 1rem;
            gap: 1rem;
        }
        .retro-profile-card,
        .retro-review-section {
            width: 95%;
            max-width: 360px;
            padding: 1rem;
        }
    }

    @media (max-width: 480px) {
        .profile-page-container {
            padding: 0.8rem;
        }
        .retro-profile-card,
        .retro-review-section {
            padding: 0.8rem;
            width: 100%;
        }
        .profile-info h3 {
            font-size: 1.1rem;
        }
        .profile-action-buttons {
            flex-direction: column;
            gap: 0.5rem;
        }
        .btn-retro-profile {
            min-width: unset;
            width: 100%;
            font-size: 0.8em;
            padding: 0.5em 0.8em;
        }
    }
</style>

<%
    function renderStars(rating) {
        let stars = '';
        // Ensure rating is a number and within bounds
        const safeRating = Math.max(0, Math.min(5, parseFloat(rating) || 0)); 
        for (let i = 0; i < 5; i++) {
            if (i < Math.floor(safeRating)) {
                stars += '⭐'; // Full star
            } else if (i < safeRating) {
                stars += '🌟'; // Half star (or a different emoji for partial)
            } else {
                stars += '☆'; // Empty star
            }
        }
        return stars;
    }
%>

<div class="profile-page-container">
    <div class="retro-profile-card">
        <div class="profile-image-container">
            <img src="<%= (user && user.avatarUrl) ? user.avatarUrl : '/images/default-avatar.png' %>" alt="<%= (user && user.username) ? user.username : 'Default' %> Profile Image" />
        </div>

        <div class="profile-info">
            <h3><%= (user && user.name) ? user.name.toUpperCase() : 'N/A' %></h3>
            <p>@<%= (user && user.username) ? user.username.toUpperCase() : 'N/A' %></p>
            <p><%= (user && user.email) ? user.email.toUpperCase() : 'N/A' %></p>
        </div>

        <div class="profile-stats">
            <div class="stat-item">
                <strong><%= (user && user.hostedGlimmers) ? user.hostedGlimmers.length : 0 %></strong>
                <span>SPARKS</span>
            </div>
            <div class="stat-item">
                <strong><%= (user && user.joinedGlimmers) ? user.joinedGlimmers.length : 0 %></strong>
                <span>FOOTPRINTS</span>
            </div>
            <div class="stat-item">
                <strong><%= (user && user.overallRating !== undefined) ? user.overallRating.toFixed(1) : '0.0' %></strong>
                <span class="overall-rating-stars"><%= renderStars((user && user.overallRating) ? user.overallRating : 0) %></span>
                <span>(<%= (user && user.numReviewsReceived !== undefined) ? user.numReviewsReceived : 0 %> Reviews)</span>
            </div>
        </div>

        <div class="profile-action-buttons">
            <a href="/profile/edit" class="btn-retro-profile">EDIT PROFILE</a>
            <a href="/profile/change-password" class="btn-retro-profile">CHANGE PASSWORD</a>
            <a href="/logout" class="btn-retro-profile">LOGOUT</a>
        </div>
    </div>

    <div class="retro-review-section">
        <h2>RECENT REVIEWS RECEIVED</h2>
        <% if (receivedReviews && receivedReviews.length > 0) { %>
            <% receivedReviews.forEach(review => { %>
                <div class="retro-review-item">
                    <div class="retro-review-header">
                        <span>FROM: <a href="/users/<%= review.reviewer ? review.reviewer._id : '#' %>/profile" class="text-retro-link"><%= (review.reviewer && review.reviewer.username) ? review.reviewer.username.toUpperCase() : 'ANONYMOUS' %></a></span>
                        <span class="retro-review-stars"><%= renderStars(review.rating) %></span>
                    </div>
                    <div class="retro-review-text">
                        <%= review.comment ? review.comment.toUpperCase() : 'NO COMMENT PROVIDED.' %>
                    </div>
                    <div class="retro-review-date">
                        FOR GLIMMER: <a href="/glimmers/<%= review.glimmer ? review.glimmer._id : '#' %>" class="text-retro-link"><%= (review.glimmer && review.glimmer.title) ? review.glimmer.title.toUpperCase() : 'UNKNOWN GLIMMER' %></a><br>
                        <%= review.createdAt ? review.createdAt.toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' }).toUpperCase() : 'UNKNOWN DATE' %>
                    </div>
                </div>
            <% }) %>
        <% } else { %>
            <p class="no-reviews-message">NO REVIEWS RECEIVED FOR YOUR HOSTED GLIMMERS YET.</p>
        <% } %>
    </div>
</div>

<script>
    // Client-side validation for the form
    (function () {
        'use strict';

        var forms = document.querySelectorAll('.needs-validation');
        const passwordInput = document.getElementById('password');
        const passwordConfirmInput = document.getElementById('passwordConfirm');
        const passwordMismatchFeedback = document.getElementById('passwordMismatchFeedback');

        // NEW: Image preview elements
        const avatarInput = document.getElementById('avatar');
        const avatarPreview = document.getElementById('avatarPreview');

        // Function to check password match
        const checkPasswordMatch = () => {
            if (passwordInput.value !== passwordConfirmInput.value) {
                passwordConfirmInput.setCustomValidity('Passwords do not match.');
                passwordMismatchFeedback.classList.add('password-mismatch'); // Add class to show specific message
            } else {
                passwordConfirmInput.setCustomValidity('');
                passwordMismatchFeedback.classList.remove('password-mismatch'); // Hide specific message
            }
        };

        // Listen for input on both password fields
        passwordInput.addEventListener('input', checkPasswordMatch);
        passwordConfirmInput.addEventListener('input', checkPasswordMatch);

        // NEW: Event listener for avatar input to show preview
        avatarInput.addEventListener('change', function() {
            if (this.files && this.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    avatarPreview.src = e.target.result;
                };
                reader.readAsDataURL(this.files[0]);
            } else {
                // If no file is selected, revert to a default placeholder
                avatarPreview.src = "/images/default-avatar.png"; // Ensure you have this placeholder image
            }
        });
        // END NEW

        Array.prototype.slice.call(forms)
            .forEach(function (form) {
                form.addEventListener('submit', function (event) {
                    checkPasswordMatch(); // Check again on submit

                    if (!form.checkValidity()) {
                        event.preventDefault();
                        event.stopPropagation();
                    }
                    form.classList.add('was-validated');
                }, false);
            });
    })();
</script>